apply plugin: 'java'

dependencies {
//    implementation 'individual.leobert.libs:retrofitext-core:1.0.1'
    implementation project(':retrofitext-core')
    implementation depext.javapoet
    annotationProcessor depext.auto
    implementation depext.auto
    implementation depext.retrofit
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'




/*
 * MIT License
 *
 * Copyright (c) 2017 leobert-lan
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

//./gradlew javadocJar
//gradlew sourcesJar
//gradlew install
//gradlew bintrayUpload

// 组织
group = "individual.leobert.libs"

// 根节点添加
version = "1.0.1"

// 根节点添加
def siteUrl = 'https://github.com/leobert-lan/RetrofitExt'    // project homepage
def gitUrl = 'https://github.com/leobert-lan/RetrofitExt.git' // project git


repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

buildscript {
    repositories {
        jcenter()
    }
    tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// 根节点添加
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name 'retrofitext-compiler'
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'leobert-lan'
                        name 'lan.leobert'
                        email 'leobert.l@hotmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
//boolean isHasFile = false
//if (project.rootProject.findProject('local.properties') != null){
//    isHasFile = true
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//}
bintray {
//    user = isHasFile ? properties.getProperty("bintray_user") : System.getenv("bintray.user")
//    key = isHasFile ? properties.getProperty("bintray_apikey") : System.getenv("bintray.apikey")

    user = properties.getProperty("bintray_user")
    key = properties.getProperty("bintray_apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "retrofitext-compiler"     // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
    }
}


